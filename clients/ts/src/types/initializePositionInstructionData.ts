/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from '@solana/kit';

export type InitializePositionInstructionData = {
  amount: ReadonlyUint8Array;
  side: number;
};

export type InitializePositionInstructionDataArgs =
  InitializePositionInstructionData;

export function getInitializePositionInstructionDataEncoder(): FixedSizeEncoder<InitializePositionInstructionDataArgs> {
  return getStructEncoder([
    ['amount', fixEncoderSize(getBytesEncoder(), 8)],
    ['side', getU8Encoder()],
  ]);
}

export function getInitializePositionInstructionDataDecoder(): FixedSizeDecoder<InitializePositionInstructionData> {
  return getStructDecoder([
    ['amount', fixDecoderSize(getBytesDecoder(), 8)],
    ['side', getU8Decoder()],
  ]);
}

export function getInitializePositionInstructionDataCodec(): FixedSizeCodec<
  InitializePositionInstructionDataArgs,
  InitializePositionInstructionData
> {
  return combineCodec(
    getInitializePositionInstructionDataEncoder(),
    getInitializePositionInstructionDataDecoder(),
  );
}
